{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"resol",
				"resolvedPath"
			],
			[
				"proj",
				"projectProgram"
			],
			[
				"req",
				"required"
			],
			[
				"Pro",
				"ProjectProgram"
			],
			[
				"Bla",
				"BlazeTerminalNode"
			],
			[
				"depen",
				"dependency"
			],
			[
				"getCl",
				"getClassNameFromFilePath"
			],
			[
				"Test",
				"TestSetupNode"
			],
			[
				"comp",
				"compiledChildren"
			],
			[
				"compi",
				"compiledIndentCharacter"
			],
			[
				"Langu",
				"Languages"
			],
			[
				"cub",
				"cuboidVolume"
			],
			[
				"cube",
				"cubeVolume"
			],
			[
				"sph",
				"sphereVolume"
			],
			[
				"pro",
				"program"
			],
			[
				"gram",
				"grammarFile"
			],
			[
				"out",
				"outputName"
			],
			[
				"thr",
				"throttled"
			],
			[
				"getGra",
				"getGrammarString"
			],
			[
				"_ge",
				"_getGrammarProgram"
			],
			[
				"_getGr",
				"_getGrammarCodeNode"
			],
			[
				"_get",
				"_getGrammarCode"
			],
			[
				"bla",
				"blazeProgram"
			],
			[
				"Bl",
				"BlazeProgram"
			],
			[
				"U",
				"UNLICENSED"
			],
			[
				"dep",
				"dependency"
			],
			[
				"de",
				"dependency"
			],
			[
				"COMPI",
				"compileProgramToJavascriptFile"
			],
			[
				"ac",
				"actual"
			],
			[
				"ex",
				"expected"
			],
			[
				"ret",
				"returnDomain"
			],
			[
				"reu",
				"returnsFalse"
			],
			[
				"wo",
				"wordType"
			],
			[
				"Gramm",
				"GrammarConstantsNode"
			],
			[
				"test",
				"testsToRun"
			],
			[
				"set",
				"setupParam"
			],
			[
				"Gram",
				"GrammarPrefaceNode"
			],
			[
				"pr",
				"programPath"
			],
			[
				"tile",
				"tileSize"
			],
			[
				"ke",
				"keyword"
			],
			[
				"cl",
				"closeChildren"
			],
			[
				"con",
				"constants"
			],
			[
				"fil",
				"fileExtension"
			],
			[
				"col",
				"columnDefinition"
			],
			[
				"ca",
				"catchAllNode"
			],
			[
				"new",
				"newName"
			],
			[
				"node",
				"nodeInScope"
			],
			[
				"add",
				"additionalWords"
			],
			[
				"const",
				"constructor"
			],
			[
				"key",
				"keyword"
			],
			[
				"au",
				"autoSave"
			],
			[
				"auto",
				"autosaveAndRender"
			],
			[
				"sym",
				"symbolsWithTileClasses"
			],
			[
				"impr",
				"improvColName"
			],
			[
				"impro",
				"improvColumnNode"
			],
			[
				"imr",
				"improvColName"
			],
			[
				"getDef",
				"getDefinitionTileClass"
			],
			[
				"loa",
				"loadCode"
			],
			[
				"Abs",
				"AbstractTileSettingNode"
			],
			[
				"getS",
				"getSettingValue"
			],
			[
				"se",
				"setting"
			],
			[
				"sy",
				"symbol"
			],
			[
				"Abst",
				"AbstractFlowSettingNode"
			],
			[
				"js",
				"jsClass"
			],
			[
				"getChi",
				"getChildren"
			],
			[
				"bal",
				"blazeClass"
			],
			[
				"getCon",
				"getConstantsObject"
			],
			[
				"pre",
				"pretty"
			],
			[
				"re",
				"reddit"
			],
			[
				"for",
				"format"
			],
			[
				"get",
				"getQuery"
			],
			[
				"s",
				"submit"
			],
			[
				"al",
				"alphanumeric"
			],
			[
				"cons",
				"constantsNode"
			],
			[
				"Gra",
				"GrammarConstants"
			],
			[
				"Grammar",
				"GrammarConstNode"
			],
			[
				"getC",
				"getChildrenByNodeType"
			],
			[
				"allow",
				"allowedAttributes"
			],
			[
				"def",
				"definitions"
			],
			[
				"cat",
				"catchAllSymbol"
			],
			[
				"_ca",
				"_cache_catchAll"
			],
			[
				"_ini",
				"_initSymbolChainCache"
			],
			[
				"Blaz",
				"BlazeNonTerminalNode"
			],
			[
				"sm",
				"symbolsArray"
			],
			[
				"inc",
				"includedMap"
			],
			[
				"foo",
				"foobar"
			],
			[
				"ab",
				"absolute"
			],
			[
				"PR",
				"ProjectProgram"
			],
			[
				"res",
				"result"
			],
			[
				"com",
				"compileCompiler"
			],
			[
				"getA",
				"getAdlerProgram"
			],
			[
				"_e",
				"_executeBrowser"
			],
			[
				"chil",
				"child"
			],
			[
				"child",
				"childrenToString"
			],
			[
				"Swarm",
				"SwarmConstants"
			],
			[
				"As",
				"AssertDoesNotIncludeNode"
			],
			[
				"sin",
				"single_statement"
			],
			[
				"non",
				"NonTerminals"
			],
			[
				"deta",
				"detailName"
			],
			[
				"html",
				"htmlTag"
			],
			[
				"hide",
				"hideColumns"
			],
			[
				"show",
				"showColumns"
			],
			[
				"Sho",
				"showColumns"
			],
			[
				"slan",
				"slangLine"
			],
			[
				"en",
				"endTime"
			],
			[
				"token",
				"tokenLines"
			],
			[
				"tree",
				"treeMTime"
			],
			[
				"ty",
				"types"
			],
			[
				"wor",
				"wordIndex"
			],
			[
				"Tok",
				"TOKEN_NAMES"
			],
			[
				"sourceT",
				"sourceTreeMTime"
			],
			[
				"_g",
				"_getTabsNode"
			],
			[
				"_getC",
				"_getChiselsThatNeedRendering"
			],
			[
				"getTi",
				"getProcessTiles"
			],
			[
				"getF",
				"getFocusedPanel"
			],
			[
				"inser",
				"insertMorphTileCommand"
			],
			[
				"getW",
				"getAppWall"
			],
			[
				"stra",
				"strategyName"
			],
			[
				"tog",
				"toggleLayoutCommand"
			],
			[
				"para",
				"parameterMap"
			],
			[
				"ci",
				"childParameters"
			],
			[
				"exec",
				"executeCommand"
			],
			[
				"po",
				"programPath"
			],
			[
				"temp",
				"tempFilePath"
			],
			[
				"readF",
				"readFilesSync"
			],
			[
				"user",
				"useServerStorage"
			],
			[
				"log",
				"logMessageText"
			],
			[
				"word",
				"wordTypeclass"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"jsp",
				"JsPrettier: Format JavaScript"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 492.0
	},
	"console":
	{
		"height": 428.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/breck/fire"
	],
	"file_history":
	[
		"/Users/breck/fire/Fire.grammar",
		"/Users/breck/fire/.gitignore",
		"/Users/breck/fire/bad.fire",
		"/Users/breck/fire/FireProgram.swarm",
		"/Users/breck/fire/fib.fire",
		"/Users/breck/fire/helloWorld.fire",
		"/Users/breck/fire/helloWorld.js",
		"/Users/breck/fire/Fire.gopher",
		"/aientist/client/chisels/TabChisel.js",
		"/aientist/client/commanders/AppCommander.js",
		"/aientist/client/tiles/TileProcess.js",
		"/aientist/client/tiles/TileProcess.test.js",
		"/aientist/client/blaze/BlazeProgram.js",
		"/aientist/client/blaze/AbstractBlazeNode.js",
		"/aientist/client/modals/HelpModal.js",
		"/aientist/client/chisels/TileToolbarChisel.js",
		"/aientist/client/fire/FireProgram.swarm",
		"/aientist/tasks/xerox.js",
		"/aientist/client/tiles/MorphTile.js",
		"/aientist/client/tiles/DidYouMeanTile.js",
		"/aientist/client/tiles/AbstractTileChisel.js",
		"/aientist/client/whatever/Whatever.grammar",
		"/aientist/client/flow/Flow.grammar",
		"/aientist/client/grammar/Grammar.grammar",
		"/aientist/client/tiles/TileSettingTerminalNode.js",
		"/aientist/client/rusty/Rusty.grammar",
		"/aientist/client/rusty/RustyProgram.js",
		"/aientist/client/grammar/GrammarKeywordDefinition.js",
		"/aientist/client/grammar/GrammarProgram.js",
		"/aientist/client/grammar/GrammarConstants.js",
		"/aientist/client/fire/Fire.grammar",
		"/aientist/client/grammar/GrammarStressTest.js",
		"/aientist/client/turtle/Turtle.grammar",
		"/aientist/client/grammar/GrammarRootNode.js",
		"/aientist/client/swarm/Swarm.grammar",
		"/aientist/client/swarm/TestSetupNode.js",
		"/aientist/journal.mark",
		"/aientist/client/grammar/GrammarProgram.swarm",
		"/aientist/tasks/testAll.js",
		"/aientist/client/grammar/GrammarProgram.test.js",
		"/aientist/tasks/builder.js",
		"/aientist/client/blaze/BlazeTerminalNode.js",
		"/aientist/client/grammar/AbstractGrammarDefinition.js",
		"/aientist/client/util/Util.js",
		"/aientist/client/turtle/TurtleProgram.js",
		"/aientist/client/swarm/CommandArgNode.js",
		"/aientist/client/tiles/TileSettingNonTerminalNode.js",
		"/aientist/client/tiles/TileAnyNode.js",
		"/aientist/client/blaze/BlazeAnyNode.js",
		"/aientist/client/fire/Fire.gopher",
		"/aientist/client/rusty/Rusty.gopher",
		"/aientist/tasks/grammarCheckFile.js",
		"/aientist/client/chisels/OhayoApp.trooper",
		"/aientist/programs/untitled-76.flow.editor.flow",
		"/aientist/client/rusty/Rusty.swarm",
		"/aientist/client/util/Util.swarm",
		"/aientist/aientist.sublime-project",
		"/aientist/client/flow/Flow.gopher",
		"/aientist/client/binder/Binder.swarm",
		"/aientist/client/binder/TreeBackedCard.swarm",
		"/aientist/client/column/Column.swarm",
		"/aientist/client/column/ColumnTypes.swarm",
		"/aientist/client/column/Metrics.swarm",
		"/aientist/client/flow/Flow.swarm",
		"/aientist/client/format/Format.swarm",
		"/aientist/client/hakon/HakonProgram.swarm",
		"/aientist/client/stump/StumpProgram.swarm",
		"/aientist/client/symbolia/Symbolia.swarm",
		"/aientist/client/tiles/Layout.swarm",
		"/aientist/client/turtle/Turtle.swarm",
		"/aientist/client/whatever/Whatever.swarm",
		"/aientist/client/willow/WillowProgram.swarm",
		"/aientist/programs/untitled-76.flow",
		"/aientist/project/project.swarm",
		"/aientist/client/swarm/TestBlock.js",
		"/aientist/gopher/GopherProgram.js",
		"/aientist/upgrade/upgrade.swarm",
		"/aientist/pipemind/antlr/peoplecode/examples/RecordPC.SSF_SS_PMT_WRK.SSF_MAKE_PAYMENT.FieldChange.pc",
		"/aientist/client/swarm/SwarmConstants.js",
		"/aientist/client/swarm/SwarmProgram.js",
		"/aientist/.gitignore",
		"/aientist/client/swarm/AbstractAssertNode.js",
		"/aientist/client/swarm/AssertPropertyEqual.js",
		"/aientist/client/swarm/AssertEqualBlockNode.js",
		"/aientist/client/swarm/AssertPropertyNode.js",
		"/aientist/client/blaze/BlazeNonTerminalNode.js",
		"/aientist/client/turtle/TurtleFunctionCallNode.js",
		"/aientist/project/project.grammar",
		"/aientist/client/symbolia/Symbolia.grammar",
		"/aientist/terminology.mark",
		"/aientist/readme.mark",
		"/aientist/tasks/oneFile.js",
		"/aientist/upgrade/upgrade.grammar",
		"/aientist/pipemind/typesurvey/m68k.tree",
		"/aientist/pipemind/typesurvey/noesis.tree",
		"/aientist/journal.md",
		"/aientist/client/peanut/Peanut.grammar",
		"/aientist/pipemind/concepts/chomskyHierarchy.tree",
		"/aientist/pipemind/typesurvey/rebol.tree",
		"/aientist/client/scot/xerox/factorial.hs",
		"/aientist/client/scot/xerox/record.hs",
		"/aientist/client/scot/xerox/area.hs",
		"/aientist/client/scot/xerox/day.hs",
		"/aientist/client/scot/xerox/instance.hs",
		"/aientist/client/scot/xerox/getName.scot",
		"/aientist/client/scot/xerox/getName.hs",
		"/aientist/pipemind/researchgroups/EPFL.tree",
		"/aientist/pipemind/people/carl-sassenrath.tree",
		"/aientist/pipemind/typesurvey/haskell.tree",
		"/aientist/client/scot/xerox/putStr.hs",
		"/aientist/client/scot/xerox/print.hs",
		"/aientist/client/scot/xerox/when.hs",
		"/aientist/client/scot/xerox/when.scot",
		"/aientist/pipemind/typesurvey/scala.tree",
		"/aientist/pipemind/people/martin-odersky.tree",
		"/aientist/pipemind/people/niklaus-wirth.tree",
		"/aientist/pipemind/typesurvey/makedoc.tree",
		"/aientist/client/scot/xerox/bmi.scot",
		"/aientist/client/scot/xerox/bmi.hs",
		"/aientist/client/scot/xerox/firstLetter.scot",
		"/aientist/client/scot/xerox/is5.scot",
		"/aientist/client/scot/xerox/is5.hs",
		"/aientist/client/scot/xerox/negate.scot",
		"/aientist/client/scot/xerox/negate.hs",
		"/aientist/client/scot/xerox/import.hs",
		"/aientist/client/scot/xerox/map",
		"/aientist/client/scot/xerox/factorial.scot",
		"/aientist/client/scot/xerox/circumference.hs"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"blazeClass",
			"aientist"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 541.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fire.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tab",
				"client/chisels/TabChisel.js"
			],
			[
				"what",
				"client/whatever/Whatever.grammar"
			],
			[
				"tilepro",
				"client/tiles/TileProcess.js"
			],
			[
				"grammarkeyworddefinition",
				"client/grammar/GrammarKeywordDefinition.js"
			],
			[
				"jou",
				"journal.mark"
			],
			[
				"swarm",
				"client/swarm/Swarm.grammar"
			],
			[
				"grammarcheckfile",
				"tasks/grammarCheckFile.js"
			],
			[
				"sublim",
				"aientist.sublime-project"
			],
			[
				"util",
				"client/util/Util.swarm"
			],
			[
				"rusty",
				"client/rusty/Rusty.swarm"
			],
			[
				".swarm",
				"pipemind/antlr/peoplecode/examples/RecordPC.SSF_SS_PMT_WRK.SSF_MAKE_PAYMENT.FieldChange.pc"
			],
			[
				"treeback",
				"client/binder/TreeBackedCard.swarm"
			],
			[
				"binder",
				"client/binder/Binder.swarm"
			],
			[
				"trooper",
				"client/chisels/OhayoApp.trooper"
			],
			[
				"troop",
				"client/chisels/OhayoApp.trooper"
			],
			[
				"blazete",
				"client/blaze/BlazeTerminalNode.js"
			],
			[
				"tilesettingterminalnode",
				"client/tiles/TileSettingTerminalNode.js"
			],
			[
				"flow.gr",
				"client/flow/Flow.grammar"
			],
			[
				"balzepro",
				"client/blaze/BlazeProgram.js"
			],
			[
				"swar",
				"client/swarm/Swarm.grammar"
			],
			[
				"one",
				"tasks/oneFile.js"
			],
			[
				"rebol",
				"pipemind/typesurvey/rebol.tree"
			],
			[
				"nikla",
				"pipemind/people/niklaus-wirth.tree"
			],
			[
				"scala",
				"pipemind/typesurvey/scala.tree"
			],
			[
				"hask",
				"pipemind/typesurvey/haskell.tree"
			],
			[
				"ou",
				"pipemind/filters/outliers.tree"
			],
			[
				"xero",
				"tasks/xerox.js"
			],
			[
				"scot",
				"client/scot/Scot.grammar"
			],
			[
				"fire.gr",
				"client/fire/Fire.grammar"
			],
			[
				"quack",
				"quack/Quack.js"
			],
			[
				"gramma",
				"client/grammar/GrammarProgram.js"
			],
			[
				"blaze",
				"client/blaze/BlazeProgram.js"
			],
			[
				"rusy",
				"client/rusty/RustyProgram.js"
			],
			[
				".gopher",
				"client/flow/Flow.gopher"
			],
			[
				"fire",
				"client/fire/Fire.grammar"
			],
			[
				"type",
				"client/blaze/BlazeSlotTypes.js"
			],
			[
				"flow",
				"client/flow/Flow.grammar"
			],
			[
				"wall",
				"client/commanders/WallCommander.js"
			],
			[
				"flow.",
				"client/flow/Flow.grammar"
			],
			[
				"them",
				"client/themes/Themes.js"
			],
			[
				"three",
				"client/flow/charts/ThreeDChart.js"
			],
			[
				"lattn",
				"pipemind/people/chris-lattner.tree"
			],
			[
				"linus",
				"pipemind/people/linus-torvalds.tree"
			],
			[
				"danny",
				"pipemind/people/danny-hillis.tree"
			],
			[
				"rel",
				"public/releasenotes.md"
			],
			[
				"faq",
				"public/faq.md"
			],
			[
				"readm",
				"public/readme.md"
			],
			[
				"readme",
				"pipemind/antlr/tsql/ReadMe.md"
			],
			[
				"swamr",
				"client/swarm/Swarm.grammar"
			],
			[
				".gramm",
				"client/whatever/Whatever.grammar"
			],
			[
				"buil",
				"tasks/builder.js"
			],
			[
				"jscom",
				"tasks/jsCompile.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"gopher",
				"client/fire/Fire.gopher"
			],
			[
				"slot",
				"client/blaze/BlazeSlotTypes.js"
			],
			[
				"fire.g",
				"client/fire/Fire.grammar"
			],
			[
				"love.gr",
				"client/love/Love.grammar"
			],
			[
				"abstractgrammardefinition",
				"client/grammar/AbstractGrammarDefinition.js"
			],
			[
				"grammarprogram",
				"client/grammar/GrammarProgram.js"
			],
			[
				"drum",
				"client/chisels/OhayoApp.drums"
			],
			[
				".grammar",
				"client/peanut/Peanut.grammar"
			],
			[
				".gram",
				"project/project.grammar"
			],
			[
				".gramma",
				"client/turtle/Turtle.grammar"
			],
			[
				"kpi",
				"client/flow/charts/KpiChart.js"
			],
			[
				"column",
				"client/column/Column.swarm"
			],
			[
				".turtl",
				"client/turtle/Sample.turtle"
			],
			[
				"wordcoun",
				"client/flow/transformers/WordCount.js"
			],
			[
				"desktopfilereader",
				"server/DesktopFileReader.js"
			],
			[
				"dir",
				"routes/dir.js"
			],
			[
				"assertequalnode",
				"client/swarm/AssertEqualNode.js"
			],
			[
				"command",
				"client/swarm/CommandNode.js"
			],
			[
				"onefi",
				"tasks/oneFile.js"
			],
			[
				"keywordde",
				"client/grammar/GrammarKeywordDefinition.js"
			],
			[
				"assertlengthnode",
				"client/swarm/AssertLengthNode.js"
			],
			[
				"turtl",
				"client/turtle/TurtleProgram.js"
			],
			[
				"codemi",
				"client/chisels/CodeMirrorTerminalChisel.js"
			],
			[
				"treemod",
				"client/codeMirror/TreeMode.js"
			],
			[
				"tro",
				"client/chisels/OhayoApp.trooper"
			],
			[
				"skippe",
				"client/swarm/SkippedTestBlock.js"
			],
			[
				"grammar",
				"client/grammar/Grammar.grammar"
			],
			[
				"swarmprogram",
				"client/swarm/SwarmProgram.js"
			],
			[
				"swarm.g",
				"client/swarm/Swarm.grammar"
			],
			[
				"abstractbla",
				"client/blaze/AbstractBlazeNode.js"
			],
			[
				"commandargnode",
				"client/swarm/CommandArgNode.js"
			],
			[
				"format",
				"client/format/Format.js"
			],
			[
				"layout",
				"client/base/tiles/Layout.swarm"
			],
			[
				"codemir",
				"client/codeMirror/TreeMode.js"
			],
			[
				"hakon.sw",
				"client/hakon/HakonProgram.swarm"
			],
			[
				"gramm",
				"tasks/grammarCheckAll.js"
			],
			[
				"rus",
				"client/rusty/Rusty.grammar"
			],
			[
				"swarm.gr",
				"client/swarm/Swarm.grammar"
			],
			[
				"gram",
				"tasks/grammarCheckAll.js"
			],
			[
				"tilean",
				"client/base/tiles/TileAnyNode.js"
			],
			[
				"blazepro",
				"client/blaze/BlazeProgram.js"
			],
			[
				"blazepr",
				"client/blaze/BlazeProgram.js"
			],
			[
				"turt",
				"client/turtle/Turtle.grammar"
			],
			[
				"turtle.p",
				"client/turtle/TurtleProgram.js"
			],
			[
				"grammar.pr",
				"client/grammar/GrammarProgram.swarm"
			],
			[
				"transform",
				"client/flow/AbstractTransformerTile.js"
			],
			[
				"drums",
				"client/chisels/OhayoApp.drums"
			],
			[
				"blazean",
				"client/blaze/BlazeAnyNode.js"
			],
			[
				"fire.",
				"client/fire/Fire.grammar"
			],
			[
				"types",
				"client/blaze/BlazeSlotTypes.js"
			],
			[
				"ycr",
				"pipemind/researchgroups/ycr.tree"
			],
			[
				"stump",
				"client/stump/StumpProgram.swarm"
			],
			[
				"bray.",
				"client/flow/charts/BrayTile.js"
			],
			[
				"bray",
				"client/flow/charts/BrayTile.js"
			],
			[
				"alan",
				"pipemind/people/alan-kay.tree"
			],
			[
				"ver",
				"tasks/version.js"
			],
			[
				"vers",
				"version.txt"
			],
			[
				"abstractgra",
				"client/grammar/AbstractGrammarDefinition.js"
			],
			[
				"flow.gra",
				"client/flow/Flow.grammar"
			],
			[
				"cardparser",
				"client/binder/CardParser.js"
			],
			[
				"data",
				"client/flow/providers/DataTile.js"
			],
			[
				".gop",
				"client/rusty/Rusty.gopher"
			],
			[
				"fire.go",
				"client/fire/Fire.gopher"
			],
			[
				"goph",
				"gopher/GopherProgram.js"
			],
			[
				"rele",
				"public/releasenotes.md"
			],
			[
				"abstractblazenode",
				"client/blaze/AbstractBlazeNode.js"
			],
			[
				"blazeterminalnode",
				"client/blaze/BlazeTerminalNode.js"
			],
			[
				"abstracttilesettingnode",
				"client/base/tiles/AbstractTileSettingNode.js"
			],
			[
				"tilesettingnonterminalnode",
				"client/base/tiles/TileSettingNonTerminalNode.js"
			],
			[
				"blazeno",
				"client/blaze/BlazeNonTerminalNode.js"
			],
			[
				"defin",
				"client/grammar/GrammarDefinition.js"
			],
			[
				"slott",
				"client/blaze/BlazeSlotTypes.js"
			],
			[
				"abstracturlprovider",
				"client/flow/providers/AbstractUrlProvider.js"
			],
			[
				"reddi",
				"client/flow/providers/RedditTile.js"
			],
			[
				"urlpr",
				"client/flow/providers/AbstractUrlProvider.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/aientist/aientist.full.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"getRunTime",
				"getRunTime()"
			]
		],
		"width": 1324.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 300.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
